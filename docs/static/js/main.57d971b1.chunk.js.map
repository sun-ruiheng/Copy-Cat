{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","styles.js","CopyCat.js","CopyCatContainer.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","styles","divStyles","fontFamily","fontSize","color","backgroundColor","display","flexDirection","alignItems","justifyContent","height","width","imgStyles","marginTop","maxHeight","inputStyles","border","instructionStyles","position","top","catSpeechStyles","bottom","images","CopyCat","copying","this","props","toggleTape","value","onChange","name","style","marginBottom","type","alt","src","onClick","React","Component","CopyCatContainer","state","bind","handleChange","setState","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCyCDQ,EAAS,CACpBC,UA9BgB,CAChBC,WApBiB,6CAqBjBC,SApBe,MAqBfC,MAbY,QAcZC,gBArBsB,UAsBtBC,QAnBc,OAoBdC,cAnBoB,SAoBpBC,WAnBiB,SAoBjBC,eAnBqB,SAoBrBC,OAzBa,QA0BbC,MAzBe,SA8CfC,UAlBgB,CAChBC,UAvBgB,OAwBhBC,UAAW,OAiBXC,YAbkB,CAClBC,OAAQ,YACRb,SAAU,QAYVc,kBAvCwB,CACxBC,SAAU,QACVC,IAAK,MACLhB,SAAU,OAqCViB,gBAVsB,CACtBF,SAAU,QACVG,OAAQ,SCzCJC,EACO,uEADPA,EAEQ,wEAIDC,EAAb,4JAEI,WACI,IAAMC,EAAUC,KAAKC,MAAMF,QACrBG,EAAaF,KAAKC,MAAMC,WACxBC,EAAQH,KAAKC,MAAME,MACnBC,EAAWJ,KAAKC,MAAMG,SACtBC,EAAOL,KAAKC,MAAMI,KAExB,OACI,sBAAKC,MAAO/B,EAAOC,UAAnB,UACI,oBAAG8B,MAAO/B,EAAOiB,kBAAjB,uBACea,EADf,uBAGA,qBAAIC,MAAO,CAAEC,aAAc,GAAInB,UAAW,GAA1C,sBAAyDiB,GAAc,SACvE,uBACIF,MAAOA,EACPK,KAAK,OACLJ,SAAUA,EACVE,MAAO/B,EAAOe,cAElB,qBACIgB,MAAO/B,EAAOY,UACdsB,IAAI,MACJC,IAAKX,EAAUF,EAAiBA,EAChCc,QAAST,IAEb,mBAAGI,MAAO/B,EAAOoB,gBAAjB,SACKI,GAAWI,WA5BhC,GAA6BS,IAAMC,WCDtBC,EAAb,kDACI,WAAYb,GAAQ,IAAD,8BACnB,cAAMA,IAEDc,MAAQ,CACXhB,SAAS,EACTI,MAAO,IAGT,EAAKD,WAAa,EAAKA,WAAWc,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATD,EADvB,8CAaE,WACEhB,KAAKkB,SAAS,CAACnB,SAAUC,KAAKe,MAAMhB,YAdxC,0BAiBE,SAAaoB,GACXnB,KAAKkB,SAAS,CAACf,MAAOgB,EAAEC,OAAOjB,UAlBnC,oBAqBE,WACE,IAAMJ,EAAUC,KAAKe,MAAMhB,QACrBG,EAAaF,KAAKE,WAClBC,EAAQH,KAAKe,MAAMZ,MACnBC,EAAWJ,KAAKiB,aAEtB,OACE,cAAC,EAAD,CACElB,QAASA,EACTG,WAAYA,EACZE,SAAUA,EACVD,MAAOA,EACPE,KAAK,YAjCb,GAAsCO,IAAMC,WCF5CQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.57d971b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const fontFamily = 'Comic Sans MS, Lucida Handwriting, cursive';\r\nconst fontSize = '5vh';\r\nconst backgroundColor = '#282c34';\r\nconst height = '100vh';\r\nconst divWidth = '100vw';\r\nconst display = \"flex\";\r\nconst flexDirection = 'column';\r\nconst alignItems = 'center';\r\nconst justifyContent = 'center';\r\nconst color = 'white';\r\nconst marginTop = '20px';\r\nconst width = '50%';\r\n\r\nconst instructionStyles = {\r\n  position: 'fixed',\r\n  top: '5px',\r\n  fontSize: '3vh'\r\n}\r\n\r\nconst divStyles = {\r\n  fontFamily: fontFamily,\r\n  fontSize: fontSize,\r\n  color: color,\r\n  backgroundColor: backgroundColor,\r\n  display: display,\r\n  flexDirection: flexDirection,\r\n  alignItems: alignItems,\r\n  justifyContent: justifyContent,\r\n  height,\r\n  width: divWidth,\r\n};\r\n\r\nconst imgStyles = {\r\n  marginTop: marginTop,\r\n  maxHeight: '50%'\r\n  // width: width\r\n};\r\n\r\nconst inputStyles = {\r\n  border: '2px solid',\r\n  fontSize: '30px'\r\n};\r\n\r\nconst catSpeechStyles = {\r\n  position: 'fixed',\r\n  bottom: '10px'\r\n}\r\n\r\nexport const styles = {\r\n  divStyles,\r\n  imgStyles,\r\n  inputStyles,\r\n  instructionStyles,\r\n  catSpeechStyles\r\n}","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst images = {\r\n    copycat: 'https://content.codecademy.com/courses/React/react_photo_copycat.png',\r\n    quietcat: 'https://content.codecademy.com/courses/React/react_photo_quietcat.png'\r\n};\r\n\r\n\r\nexport class CopyCat extends React.Component {\r\n\r\n    render() {\r\n        const copying = this.props.copying;\r\n        const toggleTape = this.props.toggleTape;\r\n        const value = this.props.value;\r\n        const onChange = this.props.onChange;\r\n        const name = this.props.name;\r\n\r\n        return (\r\n            <div style={styles.divStyles}>\r\n                <p style={styles.instructionStyles}>\r\n                    (Click on {name} to shut him up!)\r\n                </p>\r\n                <h1 style={{ marginBottom: 50, marginTop: 0 }}>Copy Cat {name ? name : 'Tom'}</h1>\r\n                <input\r\n                    value={value}\r\n                    type='text'\r\n                    onChange={onChange}\r\n                    style={styles.inputStyles}\r\n                />\r\n                <img\r\n                    style={styles.imgStyles}\r\n                    alt='cat'\r\n                    src={copying ? images.copycat : images.quietcat}\r\n                    onClick={toggleTape}\r\n                />\r\n                <p style={styles.catSpeechStyles}>\r\n                    {copying && value}\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nCopyCat.propTypes = {\r\n    copying: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    toggleTape: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string\r\n}\r\n","import React from 'react';\r\nimport {CopyCat} from './CopyCat';\r\n\r\nconst images = {\r\n  copycat: 'https://content.codecademy.com/courses/React/react_photo_copycat.png',\r\n  quietcat: 'https://content.codecademy.com/courses/React/react_photo_quietcat.png'\r\n};\r\n\r\n\r\nexport class CopyCatContainer extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n      copying: true,\r\n      value: ''\r\n    };\r\n\r\n    this.toggleTape = this.toggleTape.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  toggleTape() {\r\n    this.setState({copying: !this.state.copying})\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({value: e.target.value});\r\n  }\r\n  \r\n  render() {\r\n    const copying = this.state.copying;\r\n    const toggleTape = this.toggleTape;\r\n    const value = this.state.value;\r\n    const onChange = this.handleChange;\r\n    \r\n    return (\r\n      <CopyCat \r\n        copying={copying}\r\n        toggleTape={toggleTape}\r\n        onChange={onChange}\r\n        value={value}\r\n        name=\"Bob\"\r\n      />\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {CopyCatContainer} from './CopyCatContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CopyCatContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}